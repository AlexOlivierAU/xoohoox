"""Add user and maintenance log tables

Revision ID: 29767bc16047
Revises: 45ad9dba1cd0
Create Date: 2025-04-11 17:57:29.529615

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '29767bc16047'
down_revision: Union[str, None] = '45ad9dba1cd0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('maintenance_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('maintenance_id', sa.Integer(), nullable=False),
    sa.Column('log_date', sa.DateTime(), nullable=False),
    sa.Column('log_type', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('performed_by', sa.String(), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['maintenance_id'], ['equipment_maintenance.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_maintenance_log_id'), 'maintenance_log', ['id'], unique=False)
    op.add_column('batch_tracking', sa.Column('juice_type', sa.String(), nullable=False))
    op.add_column('batch_tracking', sa.Column('target_quantity', sa.Float(), nullable=False))
    op.add_column('batch_tracking', sa.Column('actual_quantity', sa.Float(), nullable=True))
    op.add_column('batch_tracking', sa.Column('production_date', sa.DateTime(), nullable=False))
    op.add_column('batch_tracking', sa.Column('completion_date', sa.DateTime(), nullable=True))
    op.add_column('batch_tracking', sa.Column('recipe_id', sa.String(), nullable=False))
    op.add_column('batch_tracking', sa.Column('ingredients', sa.JSON(), nullable=False))
    op.add_column('batch_tracking', sa.Column('actual_ingredients', sa.JSON(), nullable=True))
    op.add_column('batch_tracking', sa.Column('temperature', sa.Float(), nullable=True))
    op.add_column('batch_tracking', sa.Column('ph_level', sa.Float(), nullable=True))
    op.add_column('batch_tracking', sa.Column('brix', sa.Float(), nullable=True))
    op.add_column('batch_tracking', sa.Column('processing_time', sa.Integer(), nullable=True))
    op.add_column('batch_tracking', sa.Column('quality_checks', sa.JSON(), nullable=True))
    op.add_column('batch_tracking', sa.Column('issues', sa.JSON(), nullable=True))
    op.add_column('batch_tracking', sa.Column('corrective_actions', sa.JSON(), nullable=True))
    op.alter_column('batch_tracking', 'status',
               existing_type=sa.String(),
               nullable=True)
    op.alter_column('batch_tracking', 'quality_grade',
               existing_type=sa.String(),
               nullable=True)
    op.alter_column('batch_tracking', 'created_by',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('batch_tracking', 'updated_by',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('batch_tracking', 'storage_conditions')
    op.drop_column('batch_tracking', 'final_product_quantity')
    op.drop_column('batch_tracking', 'quality_issues')
    op.drop_column('batch_tracking', 'fruit_type')
    op.drop_column('batch_tracking', 'final_product_type')
    op.drop_column('batch_tracking', 'supplier_batch_id')
    op.drop_column('batch_tracking', 'processing_start_date')
    op.drop_column('batch_tracking', 'quantity_kg')
    op.drop_column('batch_tracking', 'supplier_name')
    op.drop_column('batch_tracking', 'initial_notes')
    op.drop_column('batch_tracking', 'processing_end_date')
    op.drop_column('batch_tracking', 'arrival_date')
    op.drop_column('batch_tracking', 'storage_location')
    op.add_column('equipment_maintenance', sa.Column('maintenance_date', sa.DateTime(), nullable=False))
    op.add_column('equipment_maintenance', sa.Column('description', sa.String(), nullable=True))
    op.add_column('equipment_maintenance', sa.Column('technician', sa.String(), nullable=True))
    op.alter_column('equipment_maintenance', 'work_performed',
               existing_type=sa.TEXT(),
               nullable=True)
    op.drop_index('ix_equipment_maintenance_equipment_id', table_name='equipment_maintenance')
    op.drop_index('ix_equipment_maintenance_maintenance_id', table_name='equipment_maintenance')
    op.drop_column('equipment_maintenance', 'maintenance_id')
    op.add_column('quality_control', sa.Column('juicing_input_id', sa.Integer(), nullable=True))
    op.alter_column('quality_control', 'unit_of_measure',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.alter_column('quality_control', 'retest_required',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_foreign_key(None, 'quality_control', 'juicing_input_log', ['juicing_input_id'], ['id'])
    op.create_foreign_key(None, 'quality_control', 'users', ['tester_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'quality_control', type_='foreignkey')
    op.drop_constraint(None, 'quality_control', type_='foreignkey')
    op.alter_column('quality_control', 'retest_required',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('quality_control', 'unit_of_measure',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.drop_column('quality_control', 'juicing_input_id')
    op.add_column('equipment_maintenance', sa.Column('maintenance_id', sa.VARCHAR(length=10), autoincrement=False, nullable=False))
    op.create_index('ix_equipment_maintenance_maintenance_id', 'equipment_maintenance', ['maintenance_id'], unique=False)
    op.create_index('ix_equipment_maintenance_equipment_id', 'equipment_maintenance', ['equipment_id'], unique=False)
    op.alter_column('equipment_maintenance', 'work_performed',
               existing_type=sa.TEXT(),
               nullable=False)
    op.drop_column('equipment_maintenance', 'technician')
    op.drop_column('equipment_maintenance', 'description')
    op.drop_column('equipment_maintenance', 'maintenance_date')
    op.add_column('batch_tracking', sa.Column('storage_location', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('batch_tracking', sa.Column('arrival_date', sa.DateTime(), autoincrement=False, nullable=False))
    op.add_column('batch_tracking', sa.Column('processing_end_date', sa.DateTime(), autoincrement=False, nullable=True))
    op.add_column('batch_tracking', sa.Column('initial_notes', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('batch_tracking', sa.Column('supplier_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('batch_tracking', sa.Column('quantity_kg', sa.Float(), autoincrement=False, nullable=False))
    op.add_column('batch_tracking', sa.Column('processing_start_date', sa.DateTime(), autoincrement=False, nullable=True))
    op.add_column('batch_tracking', sa.Column('supplier_batch_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('batch_tracking', sa.Column('final_product_type', sa.String(), autoincrement=False, nullable=True))
    op.add_column('batch_tracking', sa.Column('fruit_type', sa.String(), autoincrement=False, nullable=False))
    op.add_column('batch_tracking', sa.Column('quality_issues', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('batch_tracking', sa.Column('final_product_quantity', sa.Float(), autoincrement=False, nullable=True))
    op.add_column('batch_tracking', sa.Column('storage_conditions', sa.TEXT(), autoincrement=False, nullable=True))
    op.alter_column('batch_tracking', 'updated_by',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('batch_tracking', 'created_by',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('batch_tracking', 'quality_grade',
               existing_type=sa.String(),
               nullable=False)
    op.alter_column('batch_tracking', 'status',
               existing_type=sa.String(),
               nullable=False)
    op.drop_column('batch_tracking', 'corrective_actions')
    op.drop_column('batch_tracking', 'issues')
    op.drop_column('batch_tracking', 'quality_checks')
    op.drop_column('batch_tracking', 'processing_time')
    op.drop_column('batch_tracking', 'brix')
    op.drop_column('batch_tracking', 'ph_level')
    op.drop_column('batch_tracking', 'temperature')
    op.drop_column('batch_tracking', 'actual_ingredients')
    op.drop_column('batch_tracking', 'ingredients')
    op.drop_column('batch_tracking', 'recipe_id')
    op.drop_column('batch_tracking', 'completion_date')
    op.drop_column('batch_tracking', 'production_date')
    op.drop_column('batch_tracking', 'actual_quantity')
    op.drop_column('batch_tracking', 'target_quantity')
    op.drop_column('batch_tracking', 'juice_type')
    op.drop_index(op.f('ix_maintenance_log_id'), table_name='maintenance_log')
    op.drop_table('maintenance_log')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
