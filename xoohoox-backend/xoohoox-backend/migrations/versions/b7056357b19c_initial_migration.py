"""Initial migration

Revision ID: b7056357b19c
Revises: 7c2d7834a758
Create Date: 2025-04-12 00:14:29.158427

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'b7056357b19c'
down_revision: Union[str, None] = '7c2d7834a758'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_equipment_maintenance_equipment_id', table_name='equipment_maintenance')
    op.drop_index('ix_equipment_maintenance_id', table_name='equipment_maintenance')
    op.drop_index('ix_equipment_maintenance_maintenance_id', table_name='equipment_maintenance')
    op.drop_table('equipment_maintenance')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_batch_tracking_batch_id', table_name='batch_tracking')
    op.drop_index('ix_batch_tracking_id', table_name='batch_tracking')
    op.drop_table('batch_tracking')
    op.drop_index('ix_quality_control_id', table_name='quality_control')
    op.drop_index('ix_quality_control_test_id', table_name='quality_control')
    op.drop_table('quality_control')
    op.drop_index('ix_maintenance_log_id', table_name='maintenance_log')
    op.drop_table('maintenance_log')
    op.drop_index('ix_juicing_input_log_id', table_name='juicing_input_log')
    op.drop_index('ix_juicing_input_log_log_id', table_name='juicing_input_log')
    op.drop_table('juicing_input_log')
    op.drop_index('ix_inventory_management_id', table_name='inventory_management')
    op.drop_index('ix_inventory_management_item_id', table_name='inventory_management')
    op.drop_table('inventory_management')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inventory_management',
    sa.Column('item_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('item_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('item_type', sa.VARCHAR(length=16), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('sku', sa.VARCHAR(length=50), nullable=True),
    sa.Column('barcode', sa.VARCHAR(length=50), nullable=True),
    sa.Column('unit_of_measure', sa.VARCHAR(length=20), nullable=False),
    sa.Column('quantity_in_stock', sa.FLOAT(), nullable=False),
    sa.Column('minimum_stock_level', sa.FLOAT(), nullable=False),
    sa.Column('reorder_point', sa.FLOAT(), nullable=False),
    sa.Column('maximum_stock_level', sa.FLOAT(), nullable=True),
    sa.Column('storage_location', sa.VARCHAR(length=50), nullable=False),
    sa.Column('storage_condition', sa.VARCHAR(length=12), nullable=False),
    sa.Column('status', sa.VARCHAR(length=12), nullable=False),
    sa.Column('supplier_id', sa.VARCHAR(length=50), nullable=True),
    sa.Column('supplier_name', sa.VARCHAR(length=100), nullable=True),
    sa.Column('unit_cost', sa.FLOAT(), nullable=True),
    sa.Column('last_ordered_date', sa.DATETIME(), nullable=True),
    sa.Column('last_received_date', sa.DATETIME(), nullable=True),
    sa.Column('expiry_date', sa.DATETIME(), nullable=True),
    sa.Column('lot_number', sa.VARCHAR(length=50), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('total_received', sa.FLOAT(), nullable=False),
    sa.Column('total_issued', sa.FLOAT(), nullable=False),
    sa.Column('total_adjusted', sa.FLOAT(), nullable=False),
    sa.Column('last_count_date', sa.DATETIME(), nullable=True),
    sa.Column('last_count_quantity', sa.FLOAT(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('created_by', sa.VARCHAR(), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('barcode'),
    sa.UniqueConstraint('sku')
    )
    op.create_index('ix_inventory_management_item_id', 'inventory_management', ['item_id'], unique=False)
    op.create_index('ix_inventory_management_id', 'inventory_management', ['id'], unique=False)
    op.create_table('juicing_input_log',
    sa.Column('log_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('batch_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=False),
    sa.Column('operator_id', sa.VARCHAR(length=50), nullable=False),
    sa.Column('equipment_id', sa.VARCHAR(length=50), nullable=False),
    sa.Column('input_quantity_kg', sa.FLOAT(), nullable=False),
    sa.Column('temperature_c', sa.FLOAT(), nullable=False),
    sa.Column('pressure_bar', sa.FLOAT(), nullable=False),
    sa.Column('duration_minutes', sa.FLOAT(), nullable=False),
    sa.Column('output_quantity_l', sa.FLOAT(), nullable=False),
    sa.Column('brix_reading', sa.FLOAT(), nullable=False),
    sa.Column('ph_level', sa.FLOAT(), nullable=False),
    sa.Column('turbidity_ntu', sa.FLOAT(), nullable=False),
    sa.Column('process_notes', sa.TEXT(), nullable=True),
    sa.Column('quality_issues', sa.TEXT(), nullable=True),
    sa.Column('process_status', sa.VARCHAR(length=11), nullable=False),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('created_by', sa.VARCHAR(), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batch_tracking.batch_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_juicing_input_log_log_id', 'juicing_input_log', ['log_id'], unique=False)
    op.create_index('ix_juicing_input_log_id', 'juicing_input_log', ['id'], unique=False)
    op.create_table('maintenance_log',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('created_by', sa.VARCHAR(), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), nullable=True),
    sa.Column('maintenance_id', sa.INTEGER(), nullable=False),
    sa.Column('log_date', sa.DATETIME(), nullable=False),
    sa.Column('log_type', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=False),
    sa.Column('performed_by', sa.VARCHAR(), nullable=False),
    sa.Column('notes', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['maintenance_id'], ['equipment_maintenance.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_maintenance_log_id', 'maintenance_log', ['id'], unique=False)
    op.create_table('quality_control',
    sa.Column('test_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('batch_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('test_type', sa.VARCHAR(length=9), nullable=False),
    sa.Column('test_date', sa.DATETIME(), nullable=False),
    sa.Column('test_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('test_method', sa.VARCHAR(length=200), nullable=False),
    sa.Column('test_parameters', sa.TEXT(), nullable=True),
    sa.Column('expected_range_min', sa.FLOAT(), nullable=True),
    sa.Column('expected_range_max', sa.FLOAT(), nullable=True),
    sa.Column('actual_value', sa.FLOAT(), nullable=True),
    sa.Column('unit_of_measure', sa.VARCHAR(length=20), nullable=True),
    sa.Column('result', sa.VARCHAR(length=12), nullable=False),
    sa.Column('tester_id', sa.INTEGER(), nullable=False),
    sa.Column('equipment_used', sa.VARCHAR(length=100), nullable=True),
    sa.Column('temperature_c', sa.FLOAT(), nullable=True),
    sa.Column('humidity_percent', sa.FLOAT(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('corrective_actions', sa.TEXT(), nullable=True),
    sa.Column('retest_required', sa.INTEGER(), nullable=False),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('created_by', sa.VARCHAR(), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batch_tracking.batch_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_quality_control_test_id', 'quality_control', ['test_id'], unique=False)
    op.create_index('ix_quality_control_id', 'quality_control', ['id'], unique=False)
    op.create_table('batch_tracking',
    sa.Column('batch_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('arrival_date', sa.DATETIME(), nullable=False),
    sa.Column('fruit_type', sa.VARCHAR(length=9), nullable=False),
    sa.Column('supplier_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('supplier_batch_id', sa.VARCHAR(length=50), nullable=True),
    sa.Column('quantity_kg', sa.FLOAT(), nullable=False),
    sa.Column('quality_grade', sa.VARCHAR(length=8), nullable=False),
    sa.Column('storage_location', sa.VARCHAR(length=50), nullable=True),
    sa.Column('storage_conditions', sa.TEXT(), nullable=True),
    sa.Column('initial_notes', sa.TEXT(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=13), nullable=False),
    sa.Column('processing_start_date', sa.DATETIME(), nullable=True),
    sa.Column('processing_end_date', sa.DATETIME(), nullable=True),
    sa.Column('final_product_type', sa.VARCHAR(length=11), nullable=True),
    sa.Column('final_product_quantity', sa.FLOAT(), nullable=True),
    sa.Column('quality_issues', sa.TEXT(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('created_by', sa.VARCHAR(), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), nullable=True),
    sa.Column('juice_type', sa.VARCHAR(), nullable=False),
    sa.Column('target_quantity', sa.FLOAT(), nullable=False),
    sa.Column('actual_quantity', sa.FLOAT(), nullable=True),
    sa.Column('production_date', sa.DATETIME(), nullable=False),
    sa.Column('completion_date', sa.DATETIME(), nullable=True),
    sa.Column('recipe_id', sa.VARCHAR(), nullable=False),
    sa.Column('ingredients', sqlite.JSON(), nullable=False),
    sa.Column('actual_ingredients', sqlite.JSON(), nullable=True),
    sa.Column('temperature', sa.FLOAT(), nullable=True),
    sa.Column('ph_level', sa.FLOAT(), nullable=True),
    sa.Column('brix', sa.FLOAT(), nullable=True),
    sa.Column('processing_time', sa.INTEGER(), nullable=True),
    sa.Column('quality_checks', sqlite.JSON(), nullable=True),
    sa.Column('issues', sqlite.JSON(), nullable=True),
    sa.Column('corrective_actions', sqlite.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_batch_tracking_id', 'batch_tracking', ['id'], unique=False)
    op.create_index('ix_batch_tracking_batch_id', 'batch_tracking', ['batch_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_by', sa.VARCHAR(), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), nullable=True),
    sa.Column('username', sa.VARCHAR(), nullable=False),
    sa.Column('email', sa.VARCHAR(), nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), nullable=False),
    sa.Column('full_name', sa.VARCHAR(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=False)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    op.create_table('equipment_maintenance',
    sa.Column('maintenance_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('equipment_id', sa.VARCHAR(length=50), nullable=False),
    sa.Column('equipment_type', sa.VARCHAR(length=11), nullable=False),
    sa.Column('equipment_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('manufacturer', sa.VARCHAR(length=100), nullable=True),
    sa.Column('model_number', sa.VARCHAR(length=50), nullable=True),
    sa.Column('serial_number', sa.VARCHAR(length=50), nullable=True),
    sa.Column('installation_date', sa.DATETIME(), nullable=True),
    sa.Column('maintenance_type', sa.VARCHAR(length=11), nullable=False),
    sa.Column('maintenance_status', sa.VARCHAR(length=11), nullable=False),
    sa.Column('scheduled_date', sa.DATETIME(), nullable=False),
    sa.Column('actual_date', sa.DATETIME(), nullable=True),
    sa.Column('technician_id', sa.VARCHAR(length=50), nullable=False),
    sa.Column('cost', sa.FLOAT(), nullable=True),
    sa.Column('parts_replaced', sa.TEXT(), nullable=True),
    sa.Column('work_performed', sa.TEXT(), nullable=False),
    sa.Column('results', sa.TEXT(), nullable=True),
    sa.Column('next_maintenance_date', sa.DATETIME(), nullable=True),
    sa.Column('requires_shutdown', sa.BOOLEAN(), nullable=False),
    sa.Column('shutdown_duration_hours', sa.FLOAT(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('is_critical', sa.BOOLEAN(), nullable=False),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('created_by', sa.VARCHAR(), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_equipment_maintenance_maintenance_id', 'equipment_maintenance', ['maintenance_id'], unique=False)
    op.create_index('ix_equipment_maintenance_id', 'equipment_maintenance', ['id'], unique=False)
    op.create_index('ix_equipment_maintenance_equipment_id', 'equipment_maintenance', ['equipment_id'], unique=False)
    # ### end Alembic commands ###
