"""Add quality control, equipment maintenance, and inventory management models

Revision ID: 45ad9dba1cd0
Revises: 449c652c6fa3
Create Date: 2025-04-11 14:05:13.447896

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '45ad9dba1cd0'
down_revision: Union[str, None] = '449c652c6fa3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('equipment_maintenance',
    sa.Column('maintenance_id', sa.String(length=10), nullable=False),
    sa.Column('equipment_id', sa.String(length=50), nullable=False),
    sa.Column('equipment_type', sa.Enum('JUICER', 'PASTEURIZER', 'FILTER', 'PUMP', 'TANK', 'SENSOR', 'OTHER', name='equipmenttype'), nullable=False),
    sa.Column('equipment_name', sa.String(length=100), nullable=False),
    sa.Column('manufacturer', sa.String(length=100), nullable=True),
    sa.Column('model_number', sa.String(length=50), nullable=True),
    sa.Column('serial_number', sa.String(length=50), nullable=True),
    sa.Column('installation_date', sa.DateTime(), nullable=True),
    sa.Column('maintenance_type', sa.Enum('PREVENTIVE', 'CORRECTIVE', 'CALIBRATION', 'INSPECTION', 'CLEANING', name='maintenancetype'), nullable=False),
    sa.Column('maintenance_status', sa.Enum('SCHEDULED', 'IN_PROGRESS', 'COMPLETED', 'DELAYED', 'CANCELLED', name='maintenancestatus'), nullable=False),
    sa.Column('scheduled_date', sa.DateTime(), nullable=False),
    sa.Column('actual_date', sa.DateTime(), nullable=True),
    sa.Column('technician_id', sa.String(length=50), nullable=False),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('parts_replaced', sa.Text(), nullable=True),
    sa.Column('work_performed', sa.Text(), nullable=False),
    sa.Column('results', sa.Text(), nullable=True),
    sa.Column('next_maintenance_date', sa.DateTime(), nullable=True),
    sa.Column('requires_shutdown', sa.Boolean(), nullable=False),
    sa.Column('shutdown_duration_hours', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_critical', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_equipment_maintenance_equipment_id'), 'equipment_maintenance', ['equipment_id'], unique=True)
    op.create_index(op.f('ix_equipment_maintenance_id'), 'equipment_maintenance', ['id'], unique=False)
    op.create_index(op.f('ix_equipment_maintenance_maintenance_id'), 'equipment_maintenance', ['maintenance_id'], unique=True)
    op.create_table('inventory_management',
    sa.Column('item_id', sa.String(length=10), nullable=False),
    sa.Column('item_name', sa.String(length=100), nullable=False),
    sa.Column('item_type', sa.Enum('RAW_MATERIAL', 'PACKAGING', 'FINISHED_PRODUCT', 'CLEANING_SUPPLY', 'SPARE_PART', 'OTHER', name='itemtype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('sku', sa.String(length=50), nullable=True),
    sa.Column('barcode', sa.String(length=50), nullable=True),
    sa.Column('unit_of_measure', sa.String(length=20), nullable=False),
    sa.Column('quantity_in_stock', sa.Float(), nullable=False),
    sa.Column('minimum_stock_level', sa.Float(), nullable=False),
    sa.Column('reorder_point', sa.Float(), nullable=False),
    sa.Column('maximum_stock_level', sa.Float(), nullable=True),
    sa.Column('storage_location', sa.String(length=50), nullable=False),
    sa.Column('storage_condition', sa.Enum('AMBIENT', 'REFRIGERATED', 'FROZEN', 'CONTROLLED', name='storagecondition'), nullable=False),
    sa.Column('status', sa.Enum('IN_STOCK', 'LOW_STOCK', 'OUT_OF_STOCK', 'EXPIRED', 'RESERVED', 'DISCONTINUED', name='inventorystatus'), nullable=False),
    sa.Column('supplier_id', sa.String(length=50), nullable=True),
    sa.Column('supplier_name', sa.String(length=100), nullable=True),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('last_ordered_date', sa.DateTime(), nullable=True),
    sa.Column('last_received_date', sa.DateTime(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('lot_number', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('total_received', sa.Float(), nullable=False),
    sa.Column('total_issued', sa.Float(), nullable=False),
    sa.Column('total_adjusted', sa.Float(), nullable=False),
    sa.Column('last_count_date', sa.DateTime(), nullable=True),
    sa.Column('last_count_quantity', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('barcode'),
    sa.UniqueConstraint('sku')
    )
    op.create_index(op.f('ix_inventory_management_id'), 'inventory_management', ['id'], unique=False)
    op.create_index(op.f('ix_inventory_management_item_id'), 'inventory_management', ['item_id'], unique=True)
    op.create_table('quality_control',
    sa.Column('test_id', sa.String(length=10), nullable=False),
    sa.Column('batch_id', sa.String(length=10), nullable=False),
    sa.Column('test_type', sa.Enum('MICROBIAL', 'CHEMICAL', 'PHYSICAL', 'SENSORY', 'OTHER', name='testtype'), nullable=False),
    sa.Column('test_date', sa.DateTime(), nullable=False),
    sa.Column('test_name', sa.String(length=100), nullable=False),
    sa.Column('test_method', sa.String(length=200), nullable=False),
    sa.Column('test_parameters', sa.Text(), nullable=True),
    sa.Column('expected_range_min', sa.Float(), nullable=True),
    sa.Column('expected_range_max', sa.Float(), nullable=True),
    sa.Column('actual_value', sa.Float(), nullable=True),
    sa.Column('unit_of_measure', sa.String(length=20), nullable=True),
    sa.Column('result', sa.Enum('PASS', 'FAIL', 'PENDING', 'INCONCLUSIVE', name='testresult'), nullable=False),
    sa.Column('tester_id', sa.Integer(), nullable=False),
    sa.Column('equipment_used', sa.String(length=100), nullable=True),
    sa.Column('temperature_c', sa.Float(), nullable=True),
    sa.Column('humidity_percent', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('corrective_actions', sa.Text(), nullable=True),
    sa.Column('retest_required', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batch_tracking.batch_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quality_control_id'), 'quality_control', ['id'], unique=False)
    op.create_index(op.f('ix_quality_control_test_id'), 'quality_control', ['test_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_quality_control_test_id'), table_name='quality_control')
    op.drop_index(op.f('ix_quality_control_id'), table_name='quality_control')
    op.drop_table('quality_control')
    op.drop_index(op.f('ix_inventory_management_item_id'), table_name='inventory_management')
    op.drop_index(op.f('ix_inventory_management_id'), table_name='inventory_management')
    op.drop_table('inventory_management')
    op.drop_index(op.f('ix_equipment_maintenance_maintenance_id'), table_name='equipment_maintenance')
    op.drop_index(op.f('ix_equipment_maintenance_id'), table_name='equipment_maintenance')
    op.drop_index(op.f('ix_equipment_maintenance_equipment_id'), table_name='equipment_maintenance')
    op.drop_table('equipment_maintenance')
    # ### end Alembic commands ###
